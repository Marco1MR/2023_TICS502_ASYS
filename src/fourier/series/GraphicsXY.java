/*
* ITESS-TICS-TI502-ASYSC
* Agosto-Diciembre 2023
* U3. Series de Fourier
* Descrpcion Aproximacion Cuadratica
*by FJMP
*13/10/2023
*/
package fourier.series;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author rodri
 */
public class GraphicsXY extends javax.swing.JFrame {

    /**
     * Creates new form GraphicsXY
     */
    public GraphicsXY() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnDraw = new javax.swing.JButton();
        PnlDraw = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNaprox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnDraw.setText("Draw");
        BtnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDrawActionPerformed(evt);
            }
        });
        getContentPane().add(BtnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 90, 30));

        PnlDraw.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PnlDrawMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PnlDrawLayout = new javax.swing.GroupLayout(PnlDraw);
        PnlDraw.setLayout(PnlDrawLayout);
        PnlDrawLayout.setHorizontalGroup(
            PnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        PnlDrawLayout.setVerticalGroup(
            PnlDrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(PnlDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 300, 300));

        jLabel1.setText("Naproximations");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, -1));

        tfNaprox.setText("1");
        tfNaprox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNaproxActionPerformed(evt);
            }
        });
        getContentPane().add(tfNaprox, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        setBounds(0, 0, 656, 488);
    }// </editor-fold>//GEN-END:initComponents

    private void drawAxis(){
        Graphics2D g = (Graphics2D) PnlDraw.getGraphics();
        
        
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, Coordinate.WIDTH, Coordinate.HEIGHT);
        
        //Dibujar el eje x
        g.setColor(Color.GREEN);
        g.drawLine(
                Coordinate.toScreenX(Coordinate.XMIN),
                   Coordinate.toScreenY(0), 
                   Coordinate.toScreenX(Coordinate.XMAX), 
                   Coordinate.toScreenY(0));
        
        //Dibujar el eje y
         g.setColor(Color.GREEN);
         g.drawLine(
                 Coordinate.toScreenX(0),
                 Coordinate.toScreenY(Coordinate.YMIN),
                 Coordinate.toScreenX(0),   
                 Coordinate.toScreenY(Coordinate.YMAX)
                   );
         
         for (float dx=Coordinate.XMIN; dx<=Coordinate.XMAX; dx+=1.0f) {
            g.drawLine(
                    Coordinate.toScreenX(dx),
                   Coordinate.toScreenY(-0.25f), 
                   Coordinate.toScreenX(dx), 
                   Coordinate.toScreenY(0.25f));
        }
         
         for (float dy=Coordinate.YMIN; dy<=Coordinate.YMAX; dy+=1.0f) {
            g.drawLine(
                    Coordinate.toScreenX(-0.25f),
                   Coordinate.toScreenY(dy), 
                   Coordinate.toScreenX(0.25f), 
                   Coordinate.toScreenY(dy));
        }
    }
    private void drawFunction(int Naprox){
        // TODO
        MmmmSerieSquared sq = new MmmmSerieSquared(1.0f, 100);
        sq.computeTime();
        sq.computeSignal(Naprox);
        
        float x[] = sq.getTime();
        float y[] = sq.getSignal();
        
        //Draw
        Graphics2D g = (Graphics2D)PnlDraw.getGraphics();
        g.setColor(Color.PINK);
        for (int i = 0; i < x.length-1; i++) {
            
            g.drawLine(
                Coordinate.toScreenX(x[i]),
                Coordinate.toScreenY(y[i]), 
                Coordinate.toScreenX(x[i+1]),
                Coordinate.toScreenY(y[i+1])
            );
        }
        
    }
       
        
    
    private void BtnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDrawActionPerformed
        // TODO add your handling code here:
        int Naprox = Integer.parseInt(tfNaprox.getText());
        drawAxis();
        drawFunction(Naprox);
    }//GEN-LAST:event_BtnDrawActionPerformed

    private void PnlDrawMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PnlDrawMouseClicked
        // TODO add your handling code here:
        drawAxis();
    }//GEN-LAST:event_PnlDrawMouseClicked

    private void tfNaproxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNaproxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNaproxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraphicsXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraphicsXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraphicsXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraphicsXY.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraphicsXY().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDraw;
    private javax.swing.JPanel PnlDraw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField tfNaprox;
    // End of variables declaration//GEN-END:variables
}
