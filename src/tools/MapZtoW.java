/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tools;

import java.awt.Color;
import java.awt.Graphics2D;

/**
 *
 * @author rodri
 */
public class MapZtoW extends javax.swing.JFrame {
   // TP02-Problem07d problem = new TP02_Problem07d(100);
        
    

    /**
     * Creates new form MapZtoW
     */
    public MapZtoW() {
        initComponents();
       // problemD.initZ();
       // problemD.computeW();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        PnlDrawW = new javax.swing.JPanel();
        PnlDrawZ = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(640, 480));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        PnlDrawW.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(PnlDrawW, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 300, 300));

        PnlDrawZ.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(PnlDrawZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 300, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drawZ(){
        Graphics2D g = (Graphics2D) PnlDrawZ.getGraphics();
        g.setColor(Color.WHITE);
       /* ArrayList<ComplexNumber> z=problemD.getZ();
        for (ComplexNumber c:z){
            g.drawString(".",
                    Cordenate.toScreenX(c.getA()),
                    Cordenate.toScreenY(c.getB())
            );
        }*/
    }
    
    
    private void drawW(){
        Graphics2D g = (Graphics2D) PnlDrawW.getGraphics();
        g.setColor(Color.WHITE);
       /* ArrayList<ComplexNumber> z=problemD.getZ();
        for (ComplexNumber c:z){
            g.drawString(".",
                    Cordenate.toScreenX(c.getA()),
                    Cordenate.toScreenY(c.getB())
            );
        }*/
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        drawAxisZ();
        drawAxisW();
    }//GEN-LAST:event_jButton1ActionPerformed
private void drawAxisW(){
        Graphics2D g = (Graphics2D) PnlDrawW.getGraphics();
        
        
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, Cordenate.WIDTH, Cordenate.HEIGHT);
        
        //Dibujar el eje x
        g.setColor(Color.GREEN);
        g.drawLine(
                Cordenate.toScreenX(Cordenate.XMIN),
                   Cordenate.toScreenY(0), 
                   Cordenate.toScreenX(Cordenate.XMAX), 
                   Cordenate.toScreenY(0));
        
        //Dibujar el eje y
         g.setColor(Color.GREEN);
         g.drawLine(
                 Cordenate.toScreenY(Cordenate.YMIN),
                   Cordenate.toScreenX(0), 
                   Cordenate.toScreenY(Cordenate.YMAX), 
                   Cordenate.toScreenX(0));
         
         for (float dx=Cordenate.XMIN; dx<=Cordenate.XMAX; dx+=1.0f) {
            g.drawLine(
                    Cordenate.toScreenX(dx),
                   Cordenate.toScreenY(-0.25f), 
                   Cordenate.toScreenX(dx), 
                   Cordenate.toScreenY(0.25f));
        }
         
         for (float dy=Cordenate.YMIN; dy<=Cordenate.YMAX; dy+=1.0f) {
            g.drawLine(
                    Cordenate.toScreenX(-0.25f),
                   Cordenate.toScreenY(dy), 
                   Cordenate.toScreenX(0.25f), 
                   Cordenate.toScreenY(dy));
        }
    }
    
    private void drawAxisZ(){
        Graphics2D g = (Graphics2D) PnlDrawZ.getGraphics();
        
        
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, Cordenate.WIDTH, Cordenate.HEIGHT);
        
        //Dibujar el eje x
        g.setColor(Color.GREEN);
        g.drawLine(
                Cordenate.toScreenX(Cordenate.XMIN),
                   Cordenate.toScreenY(0), 
                   Cordenate.toScreenX(Cordenate.XMAX), 
                   Cordenate.toScreenY(0));
        
        //Dibujar el eje y
         g.setColor(Color.GREEN);
         g.drawLine(
                 Cordenate.toScreenY(Cordenate.YMIN),
                   Cordenate.toScreenX(0), 
                   Cordenate.toScreenY(Cordenate.YMAX), 
                   Cordenate.toScreenX(0));
         
         for (float dx=Cordenate.XMIN; dx<=Cordenate.XMAX; dx+=1.0f) {
            g.drawLine(
                    Cordenate.toScreenX(dx),
                   Cordenate.toScreenY(-0.25f), 
                   Cordenate.toScreenX(dx), 
                   Cordenate.toScreenY(0.25f));
        }
         
         for (float dy=Cordenate.YMIN; dy<=Cordenate.YMAX; dy+=1.0f) {
            g.drawLine(
                    Cordenate.toScreenX(-0.25f),
                   Cordenate.toScreenY(dy), 
                   Cordenate.toScreenX(0.25f), 
                   Cordenate.toScreenY(dy));
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapZtoW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapZtoW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PnlDrawW;
    private javax.swing.JPanel PnlDrawZ;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
